plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.11.2'
    id "io.freefair.lombok" version "8.10"
}

def restAssuredVersion = "5.3.1",
    allureVersion = "2.21.0",
    junitVersion = "5.10.2",
    lombokVersion = "8.10",
    selenideVersion = "7.3.2",
    selenideAllureVersion = "2.19.0",
    ownerVersion = "1.0.12"

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

repositories {
    mavenCentral()
}

compileTestJava {
    options.encoding = 'UTF-8'
}

dependencies {
    testImplementation(
            "io.rest-assured:rest-assured:$restAssuredVersion",
            "io.rest-assured:json-schema-validator:$restAssuredVersion",
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "org.junit.jupiter:junit-jupiter:$junitVersion",
            "io.freefair.gradle:lombok-plugin:$lombokVersion",
            "com.codeborne:selenide:$selenideVersion",
            "io.qameta.allure:allure-selenide:$selenideAllureVersion",
            "org.aeonbits.owner:owner:$ownerVersion",
            'org.assertj:assertj-core:3.25.3',
            'org.slf4j:slf4j-simple:2.0.7'
    )
}

tasks.withType(Test) {
    useJUnitPlatform()
    systemProperties(System.getProperties())
    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform {
        if (System.getProperty("type") != null && !System.getProperty("type").isEmpty()) {
            includeTags(System.getProperty("type"))
        }
    }
}